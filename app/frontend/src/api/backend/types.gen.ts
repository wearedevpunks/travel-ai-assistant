// This file is auto-generated by @hey-api/openapi-ts

export type TravelPlannerTheme = {
    /**
     * The primary color for the theme
     */
    primaryColor: string;
    /**
     * A dynamic claim to add in the UI
     */
    claim: string;
};

export type TravelAssistantAiChatMessage = {
    /**
     * The role of the message sender
     */
    role: 'user' | 'assistant' | 'system' | 'function';
    /**
     * The content of the message
     */
    content: string;
};

export type TravelAssistantAiChatRequest = {
    /**
     * Array of previous messages in the conversation
     */
    messages: Array<TravelAssistantAiChatMessage>;
    /**
     * Unique identifier for the conversation
     */
    conversationId?: string;
};

export type TravelAssistantTextToSpeechRequest = {
    /**
     * The text to convert to speech
     */
    text: string;
    /**
     * The voice to use for the speech
     */
    voice?: string;
    /**
     * The speed of the speech
     */
    speed?: number;
    /**
     * Additional instructions for the speech
     */
    instructions?: string;
    /**
     * The response format of the audio
     */
    responseFormat?: {
        [key: string]: unknown;
    };
};

export type TravelAssistantSpeechToTextRequest = {
    /**
     * The audio file to transcribe (Base64 encoded)
     */
    audioData: Blob | File;
    /**
     * The language of the audio (optional, auto-detected if not provided)
     */
    language?: string;
    /**
     * The model to use for speech recognition
     */
    model?: string;
};

export type TravelAssistantSpeechToTextResponse = {
    /**
     * The transcribed text from the audio
     */
    text: string;
    /**
     * The detected language of the audio (ISO code)
     */
    language?: string;
};

export type TravelItineraryDestinationPicture = {
    /**
     * The URL of the picture
     */
    url: string;
    /**
     * The photographer of the picture
     */
    photographer: string;
    /**
     * The alternative text of the picture
     */
    alt: string;
};

export type TravelItineraryDestination = {
    /**
     * The unique identifier for the destination
     */
    id: string;
    /**
     * The name of the destination
     */
    name: string;
    /**
     * The country of the destination
     */
    country: string;
    /**
     * The continent of the destination
     */
    continent: string;
    /**
     * The picture URL of the destination
     */
    picture?: TravelItineraryDestinationPicture;
};

export type TravelItineraryActivity = {
    /**
     * The activity description
     */
    description: string;
    /**
     * Estimated duration in hours
     */
    hours?: number;
};

export type TravelItineraryDay = {
    /**
     * The unique identifier for the day
     */
    id: string;
    /**
     * List of activities for the day
     */
    activities: Array<TravelItineraryActivity>;
};

export type TravelItinerary = {
    /**
     * The unique identifier for the itinerary
     */
    id: string;
    /**
     * The destination ID of the itinerary
     */
    destination: TravelItineraryDestination;
    /**
     * List of days in the itinerary
     */
    days: Array<TravelItineraryDay>;
};

export type AppControllerIndexData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type AppControllerIndexResponses = {
    200: unknown;
};

export type HealthCheckData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health';
};

export type HealthCheckResponses = {
    200: unknown;
};

export type TravelPlannerRandomThemeData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/travel-planner/random-theme';
};

export type TravelPlannerRandomThemeResponses = {
    /**
     * Returns a random travel theme
     */
    200: TravelPlannerTheme;
};

export type TravelPlannerRandomThemeResponse = TravelPlannerRandomThemeResponses[keyof TravelPlannerRandomThemeResponses];

export type TravelPlannerChatSendData = {
    body: TravelAssistantAiChatRequest;
    path?: never;
    query?: never;
    url: '/v1/travel-planner/chat';
};

export type TravelPlannerChatSendResponses = {
    /**
     * Returns streamed AI response
     */
    200: unknown;
};

export type TravelPlannerTtsSendData = {
    body: TravelAssistantTextToSpeechRequest;
    path?: never;
    query?: never;
    url: '/v1/travel-planner/tts';
};

export type TravelPlannerTtsSendResponses = {
    /**
     * Returns streamed audio response
     */
    200: unknown;
};

export type TravelPlannerSttSendData = {
    body: TravelAssistantSpeechToTextRequest;
    path?: never;
    query?: never;
    url: '/v1/travel-planner/stt';
};

export type TravelPlannerSttSendErrors = {
    /**
     * Invalid audio data
     */
    400: unknown;
    /**
     * Server error in processing speech
     */
    500: unknown;
};

export type TravelPlannerSttSendResponses = {
    /**
     * Returns transcribed text
     */
    200: TravelAssistantSpeechToTextResponse;
};

export type TravelPlannerSttSendResponse = TravelPlannerSttSendResponses[keyof TravelPlannerSttSendResponses];

export type TravelPlannerItineraryGetData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/v1/travel-planner/itinerary/{id}';
};

export type TravelPlannerItineraryGetErrors = {
    /**
     * Itinerary not found
     */
    404: unknown;
};

export type TravelPlannerItineraryGetResponses = {
    /**
     * Returns the travel itinerary
     */
    200: TravelItinerary;
};

export type TravelPlannerItineraryGetResponse = TravelPlannerItineraryGetResponses[keyof TravelPlannerItineraryGetResponses];

export type ClientOptions = {
    baseUrl: string;
};